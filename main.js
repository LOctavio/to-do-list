(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(15),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([e.id,"ul {\n  list-style-type: none;\n  width: 400px;\n  margin: 0 auto;\n  box-shadow: rgba(100, 100, 111, 0.2) 0 7px 29px 0;\n  padding: 0 0 50px 0;\n  position: relative;\n}\n\nli {\n  border-top: 1px solid #ebebeb;\n  height: 50px;\n  width: inherit;\n  position: relative;\n}\n\n#add-task {\n  width: 335px;\n  height: 100%;\n  border: 0;\n  padding: 0 50px 0 15px;\n  background-color: #ebebeb;\n  font-style: italic;\n}\n\n#add-task:focus {\n  outline: none;\n}\n\n#add-button {\n  position: absolute;\n  right: 0;\n  border: 0;\n  width: 50px;\n  height: 100%;\n  background-color: #ebebeb;\n}\n\n.tasks input {\n  margin: 15px;\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  left: 0;\n}\n\n.tasks textarea {\n  display: inline-block;\n  width: 300px;\n  height: 48px;\n  line-height: 48px;\n  margin: 0 50px;\n  border: 0;\n  padding: 0;\n  resize: none;\n}\n\n.tasks img {\n  position: absolute;\n  right: 0;\n  width: 20px;\n  height: 20px;\n  margin: 15px;\n}\n\n#title {\n  display: inline-block;\n  width: 335px;\n  padding-right: 50px;\n  padding-left: 15px;\n  height: inherit;\n  line-height: 50px;\n}\n\n#refresh-icon {\n  position: absolute;\n  right: 0;\n  padding: 15px;\n  width: 20px;\n  height: 20px;\n}\n\n#clear-complete {\n  position: absolute;\n  bottom: 0;\n}\n\n#clear-complete button {\n  height: inherit;\n  width: inherit;\n  color: rgb(123, 123, 123);\n  background-color: rgb(246, 246, 246);\n  border: 0;\n  padding: 0;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,YAAY;EACZ,cAAc;EACd,iDAAiD;EACjD,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;EAC7B,YAAY;EACZ,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,SAAS;EACT,sBAAsB;EACtB,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,WAAW;EACX,YAAY;EACZ,yBAAyB;AAC3B;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,OAAO;AACT;;AAEA;EACE,qBAAqB;EACrB,YAAY;EACZ,YAAY;EACZ,iBAAiB;EACjB,cAAc;EACd,SAAS;EACT,UAAU;EACV,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,WAAW;EACX,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,qBAAqB;EACrB,YAAY;EACZ,mBAAmB;EACnB,kBAAkB;EAClB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,aAAa;EACb,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,SAAS;AACX;;AAEA;EACE,eAAe;EACf,cAAc;EACd,yBAAyB;EACzB,oCAAoC;EACpC,SAAS;EACT,UAAU;AACZ",sourcesContent:["ul {\n  list-style-type: none;\n  width: 400px;\n  margin: 0 auto;\n  box-shadow: rgba(100, 100, 111, 0.2) 0 7px 29px 0;\n  padding: 0 0 50px 0;\n  position: relative;\n}\n\nli {\n  border-top: 1px solid #ebebeb;\n  height: 50px;\n  width: inherit;\n  position: relative;\n}\n\n#add-task {\n  width: 335px;\n  height: 100%;\n  border: 0;\n  padding: 0 50px 0 15px;\n  background-color: #ebebeb;\n  font-style: italic;\n}\n\n#add-task:focus {\n  outline: none;\n}\n\n#add-button {\n  position: absolute;\n  right: 0;\n  border: 0;\n  width: 50px;\n  height: 100%;\n  background-color: #ebebeb;\n}\n\n.tasks input {\n  margin: 15px;\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  left: 0;\n}\n\n.tasks textarea {\n  display: inline-block;\n  width: 300px;\n  height: 48px;\n  line-height: 48px;\n  margin: 0 50px;\n  border: 0;\n  padding: 0;\n  resize: none;\n}\n\n.tasks img {\n  position: absolute;\n  right: 0;\n  width: 20px;\n  height: 20px;\n  margin: 15px;\n}\n\n#title {\n  display: inline-block;\n  width: 335px;\n  padding-right: 50px;\n  padding-left: 15px;\n  height: inherit;\n  line-height: 50px;\n}\n\n#refresh-icon {\n  position: absolute;\n  right: 0;\n  padding: 15px;\n  width: 20px;\n  height: 20px;\n}\n\n#clear-complete {\n  position: absolute;\n  bottom: 0;\n}\n\n#clear-complete button {\n  height: inherit;\n  width: inherit;\n  color: rgb(123, 123, 123);\n  background-color: rgb(246, 246, 246);\n  border: 0;\n  padding: 0;\n}\n"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);r&&i[d[0]]||(t&&(d[2]?d[2]="".concat(t," and ").concat(d[2]):d[2]=t),n.push(d))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,i=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o=[],a=!0,c=!1;try{for(t=t.call(e);!(a=(r=t.next()).done)&&(o.push(r.value),!n||o.length!==n);a=!0);}catch(e){c=!0,i=e}finally{try{a||null==t.return||t.return()}finally{if(c)throw i}}return o}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if(!a)return o;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),s="/*# ".concat(d," */"),l=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[o].concat(l).concat([s]).join("\n")}return[o].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},a=[],c=0;c<e.length;c++){var d=e[c],s=r.base?d[0]+r.base:d[0],l=o[s]||0,A="".concat(s," ").concat(l);o[s]=l+1;var p=t(A),u={css:d[1],media:d[2],sourceMap:d[3]};-1!==p?(n[p].references++,n[p].updater(u)):n.push({identifier:A,updater:i(u,r),references:1}),a.push(A)}return a}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var o=r(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var c=t(o[a]);n[c].references--}for(var d=r(e,i),s=0;s<o.length;s++){var l=t(o[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=d}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r=t.css,i=t.media,o=t.sourceMap;i?e.setAttribute("media",i):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},659:(e,n,t)=>{e.exports=t.p+"a5aaafc7324141569da4.svg"},979:(e,n,t)=>{e.exports=t.p+"abaa8f9a908f59d94c2b.svg"},745:(e,n,t)=>{e.exports=t.p+"c795f4c16c886a041cbb.svg"}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var r={};(()=>{t.d(r,{i:()=>k,p:()=>B});var e=t(745),n=t(979),i=t(659),o=t(379),a=t.n(o),c=t(795),d=t.n(c),s=t(569),l=t.n(s),A=t(565),p=t.n(A),u=t(216),h=t.n(u),g=t(589),f=t.n(g),b=t(426),m={};let E;function C(e){E=e}function x(e,n){const t=n.target.parentElement;E.id>t.id?e.insertBefore(E,t):e.insertBefore(t,E),localStorage.setItem(t.id,`{"description":"${E.firstChild.nextSibling.textContent}","completed":false,"index":${t.id}}`),localStorage.setItem(E.id,`{"description":"${t.firstChild.nextSibling.textContent}","completed":false,"index":${E.id}}`),[E.id,t.id]=[t.id,E.id]}m.styleTagTransform=f(),m.setAttributes=p(),m.insert=l().bind(null,"head"),m.domAPI=d(),m.insertStyleElement=h(),a()(b.Z,m),b.Z&&b.Z.locals&&b.Z.locals;const v=(e,n)=>{B.push(new k(e,n)),y(e,n)},y=(e,n)=>{localStorage.setItem(n,JSON.stringify(new k(e,n)))},B=[];let w=0;class k{constructor(e,n,t=!1){this.description=e,this.completed=t,this.index=n}}const S=(n,t)=>{const r=document.querySelector("ul"),i=document.createElement("li");i.setAttribute("id",t),i.setAttribute("draggable","true"),i.classList.add("tasks"),i.addEventListener("dragstart",(()=>C(i))),i.addEventListener("drop",(e=>x(r,e))),i.addEventListener("dragover",(e=>{e.preventDefault()}));const o=document.createElement("input");o.addEventListener("change",(e=>function(e,n,t){const r=!!e.target.checked;localStorage.setItem(t,`{"description":"${n}","completed":${r},"index":${t}}`)}(e,n,t)));const a=document.createElement("textarea");a.addEventListener("change",(e=>function(e,n){localStorage.setItem(n.id,`{"description":"${e.target.value}","completed":false,"index":${n.id}}`)}(e,i)));const c=new Image;c.src=e,o.type="checkbox",a.textContent=n,i.appendChild(o),i.appendChild(a),i.appendChild(c),r.appendChild(i)};window.onload=()=>{(()=>{const e=document.querySelector("ul"),t=document.createElement("li"),r=document.createElement("label"),o=new Image;o.setAttribute("id","refresh-icon"),o.src=i,r.innerHTML="Today's To Do",t.appendChild(r),t.appendChild(o),r.setAttribute("id","title");const a=document.createElement("li"),c=document.createElement("button");c.setAttribute("id","add-button");const d=new Image;d.src=n,c.appendChild(d);const s=document.createElement("input");s.setAttribute("id","add-task"),s.setAttribute("placeholder","Add to your list..."),a.appendChild(s),a.appendChild(c),e.appendChild(t),e.appendChild(a),B.forEach((e=>{S(e.description)}));const l=document.createElement("li");l.setAttribute("id","clear-complete");const A=document.createElement("button");A.textContent="Clear all completed",l.appendChild(A),e.appendChild(l)})(),document.querySelector("#add-button").addEventListener("click",(()=>{const e=document.querySelector("#add-task");w+=1,v(e.value,w),S(e.value,w),e.value=""})),0===localStorage.length?(v("Buy eggs",1),S("Buy eggs",1),v("Wash the dishes",2),S("Wash the dishes",2),v("Feed cats",3),S("Feed cats",3)):(()=>{for(let e=0;e<localStorage.length;e+=1){const n=localStorage.key(e),{description:t}=JSON.parse(localStorage.getItem(localStorage.key(e)));B.push(new k(t,n))}B.sort(((e,n)=>e.index>n.index?1:-1));for(let e=0;e<localStorage.length;e+=1)S(B[e].description,B[e].index)})(),w=B.length+1}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,